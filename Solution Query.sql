USE AmazonDB;

-- 1) List all customers who have made purchases of more than $80.
SELECT Users.user_name, Users.email, sum(Orders.total_amount) AS total_spent
FROM Users
JOIN Orders ON Users.user_id = Orders.user_id
GROUP BY Users.user_id
HAVING total_spent > 80;

-- 2) Retrieve all orders placed in the last 280 days along with the customer name and email.
SELECT Users.user_name, Users.email, Orders.order_date, Orders.total_amount
FROM Users
RIGHT JOIN Orders ON Users.user_id = Orders.user_id;

-- 3) Find the average product price for each category.
SELECT Products.category, avg(Products.price) AS Average_Price
FROM Products
GROUP BY Products.category;

-- 4) List all customers who have purchased a product from the category Electronics.
SELECT Users.user_name, Users.email, Products.category
FROM Users
JOIN Orders ON Users.user_id = Orders.user_id
JOIN OrderDetails ON Orders.order_id = OrderDetails.order_id
JOIN Products ON OrderDetails.product_id = Products.product_id
WHERE Products.category = 'Electronics';

-- 5) Find the total number of products sold and the total revenue generated for each product
SELECT Products.product_name, 
    SUM(OrderDetails.quantity) AS total_quantity_sold, 
    SUM(OrderDetails.quantity * Products.price) AS total_revenue
FROM OrderDetails
JOIN Products ON OrderDetails.product_id = Products.product_id
GROUP BY Products.product_id;

-- 6) Update the price of all products in the Books category, increasing it by 10%.
SET SQL_SAFE_UPDATES = 0;
UPDATE Products
SET price = price * 1.10
WHERE category = 'Books';

-- 7) Remove all orders that were placed before 2020.
DELETE from Orders
WHERE order_date < '2020-01-01';

-- 8) Write a query to fetch the order details, including customer name, product name, and quantity, for orders placed on 2024-05-01
SELECT Orders.order_id, Users.user_name, Products.product_name, OrderDetails.quantity
FROM Orders
JOIN Users ON Orders.user_id = Users.user_id
JOIN OrderDetails ON Orders.order_id = OrderDetails.order_id
JOIN Products ON OrderDetails.product_id = Products.product_id
WHERE Orders.order_date = '2024-5-01';

-- 9) Fetch all customers and the total number of orders they have placed.
SELECT Users.user_name, OrderDetails.quantity
FROM Users
JOIN Orders
ON Users.user_id = Orders.user_id
JOIN OrderDetails
ON Orders.order_id = OrderDetails.order_id;

-- 10) List all customers who purchased more than 1 units of any product, including the product name and total quantity purchased.
SELECT Users.user_name, Users.email, Products.product_name, SUM(OrderDetails.quantity) AS total_quantity
FROM Users
JOIN Orders ON Users.user_id = Orders.user_id
JOIN OrderDetails ON Orders.order_id = OrderDetails.order_id
JOIN Products ON OrderDetails.product_id = Products.product_id
GROUP BY Users.user_id, Products.product_id
HAVING total_quantity > 1;

-- 11) Find the total revenue generated by each category along with the category name.
SELECT Products.category, SUM(OrderDetails.quantity * Products.price) AS total_revenue
FROM Products
JOIN OrderDetails ON Products.product_id = OrderDetails.product_id
GROUP BY Products.category;